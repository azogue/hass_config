# WOL
- platform: wake_on_lan
  mac_address: !secret mac_nas
  name: "WOL NAS"
  host: "192.168.1.40"

# Etekcity outlets
- platform: rpi_rf
  gpio: 17
  name: Etekcity outlets
  switches:
    cocina:
      pulselength: 185
      code_on: 4527411
      code_off: 4527420
      signal_repetitions: 20
    caldera:
      pulselength: 185
      code_on: 4527555
      code_off: 4527564
      signal_repetitions: 30
    camara:
      pulselength: 185
      code_on: 4527875
      code_off: 4527884
      signal_repetitions: 20
    altavoz:
      pulselength: 185
      code_on: 4529411
      code_off: 4529420
      signal_repetitions: 20
    calefactor:
      pulselength: 185
      code_on: 4535555
      code_off: 4535564
      signal_repetitions: 20

    # new pack of Etekcity (3x)
    impresora:
      pulselength: 186
      code_on: 4478259
      code_off: 4478268
      signal_repetitions: 20
#    new_switch_2:
#      pulselength: 186
#      code_on: 4478403
#      code_off: 4478412
#      signal_repetitions: 20
#    new_switch_3:
#      pulselength: 186
#      code_on: 4478723
#      code_off: 4478732
#      signal_repetitions: 20
#    new_switch_4:  # no switch, only remote button
#      pulselength: 186
#      code_on: 4480259
#      code_off: 4480268
#      signal_repetitions: 20
#    new_switch_5:  # no switch, only remote button
#      pulselength: 186
#      code_on: 4486403
#      code_off: 4486412
#      signal_repetitions: 20

- platform: command_line
  scan_interval: 120
  switches:
    toggle_kodi_ambilight:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh 1'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh 0'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh'
      friendly_name: KODI Ambilight
      value_template: '{{ value_json == 1 }}'
    toggle_config_kodi_ambilight:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh set_hue6'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh set_hue4'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_kodi_hyperion.sh num_lights'
      friendly_name: KODI Ambilight INMERSION
      value_template: '{{ value_json == 6 }}'

    motioncam_escam:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 1 start'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 1 pause'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 1 status'
      friendly_name: Usar movimiento en vídeo Salón
      value_template: '{{ value_json == 1 }}'
    motioncam_estudio:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 2 start'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 2 pause'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_camera_motion_detection.sh 192.168.1.46 2 status'
      friendly_name: Usar movimiento en vídeo Estudio
      value_template: '{{ value_json == 1 }}'
    systemd_appdaemon:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh appdaemon start'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh appdaemon stop'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh appdaemon status'
      friendly_name: Appdaemon service
      value_template: '{{ value_json == 1 }}'
    systemd_homebridge:
      command_on: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh homebridge start'
      command_off: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh homebridge stop'
      command_state: '/home/homeassistant/.homeassistant/shell/switch_systemd_service.sh homebridge status'
      friendly_name: Homebridge service
      value_template: '{{ value_json == 1 }}'

# Input_boolean's to switches because homebridge doesn't update the initial state of IBs, so IB are ignored and Ss added
- platform: template
  switches:
    alarm_clock_status:
      friendly_name: Despertador LaCafetera
#      value_template: "{{ is_state('input_boolean.alarm_clock_status', 'on') }}"
      value_template: "{{ states.input_boolean.alarm_clock_status.state == 'on' }}"
      turn_on:
        service: input_boolean.turn_on
        entity_id: input_boolean.alarm_clock_status
      turn_off:
        service: input_boolean.turn_off
        entity_id: input_boolean.alarm_clock_status
    switch_master_alarm:
      friendly_name: Alarma general
#      value_template: "{{ is_state('input_boolean.switch_master_alarm', 'on') }}"
      value_template: "{{ states.input_boolean.switch_master_alarm.state == 'on' }}"
      turn_on:
        service: input_boolean.turn_on
        entity_id: input_boolean.switch_master_alarm
      turn_off:
        service: input_boolean.turn_off
        entity_id: input_boolean.switch_master_alarm

    use_pir_estudio_rpi2h:
      turn_off:
        entity_id: input_boolean.use_pir_estudio_rpi2h
        service: input_boolean.turn_off
      turn_on:
        entity_id: input_boolean.use_pir_estudio_rpi2h
        service: input_boolean.turn_on
      value_template: '{{ states.input_boolean.use_pir_estudio_rpi2h.state == "on"}}'
    use_pir_salon:
      turn_off:
        entity_id: input_boolean.use_pir_salon
        service: input_boolean.turn_off
      turn_on:
        entity_id: input_boolean.use_pir_salon
        service: input_boolean.turn_on
      value_template: '{{ states.input_boolean.use_pir_salon.state == "on" }}'
    use_sound_sensor_rpi2h:
      turn_off:
        entity_id: input_boolean.use_sound_sensor_rpi2h
        service: input_boolean.turn_off
      turn_on:
        entity_id: input_boolean.use_sound_sensor_rpi2h
        service: input_boolean.turn_on
      value_template: '{{ states.input_boolean.use_sound_sensor_rpi2h.state == "on"}}'
    use_vibration_sensor_rpi2h:
      turn_off:
        entity_id: input_boolean.use_vibration_sensor_rpi2h
        service: input_boolean.turn_off
      turn_on:
        entity_id: input_boolean.use_vibration_sensor_rpi2h
        service: input_boolean.turn_on
      value_template: '{{ states.input_boolean.use_vibration_sensor_rpi2h.state == "on" }}'

#- platform: rpi_gpio
#  ports:
#    13: RPI LED

- platform: cecswitch
  name: kodi_tv_salon
  host: "192.168.1.56"
  port: 8080
  username: "osmc"
  password: "osmc"
