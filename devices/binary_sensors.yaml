- platform: rpi_gpio
  name: Movimiento Salón
  device_class: motion
  ports:
    18: PIR Salón
  bouncetime: 50
  pull_mode: "UP"
#  invert_logic: true

#- platform: mqtt
#  state_topic: "hass/status"
#  name: 'HA Status'
#  payload_on: "online"
#  payload_off: "offline"
#  device_class: connectivity

- platform: command_line
  name: Internet Online
  command: ping -W 1 -c 1 8.8.8.8 > /dev/null 2>&1 && echo success || echo fail
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 120

- platform: command_line
  name: Router ON
  command: ping -W 1 -c 1 192.168.1.1 > /dev/null 2>&1 && echo success || echo fail
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: command_line
  name: Pushbullet Online
  command: "/home/homeassistant/.homeassistant/shell/check_notifiers.sh pushbullet"
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: command_line
  name: Email Online
  command: "/home/homeassistant/.homeassistant/shell/check_notifiers.sh richsmtp"
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: command_line
  name: Telegram Online
  command: "/home/homeassistant/.homeassistant/shell/check_notifiers.sh mytelegram"
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: command_line
  name: iOS Online
  command: "/home/homeassistant/.homeassistant/shell/check_notifiers.sh ios"
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: command_line
  name: Kodi Online
  command: "/home/homeassistant/.homeassistant/shell/check_notifiers.sh kodi"
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 240

- platform: template
  sensors:
    heating:
      friendly_name: Calefacción encendida
      device_class: heat
      value_template: "{{states.sensor.calefaccion.state != 'off'}}"
      entity_id:
        - sensor.calefaccion
    services_notok:
      friendly_name: Problemas
      device_class: safety
      value_template: >
        {{
         (states.binary_sensor.kodi_online.state == 'off') or
         (states.binary_sensor.pushbullet_online.state == 'off') or
         (states.binary_sensor.email_online.state == 'off') or
         (states.binary_sensor.ios_online.state == 'off') or
         (states.binary_sensor.telegram_online.state == 'off') or
         (states.binary_sensor.router_on.state == 'off') or
         (states.binary_sensor.internet_online.state == 'off') or
         (states.sensor.ip_externa.state != '185.97.169.163') or
         (states.switch.systemd_appdaemon.state == 'off') or
         (states.switch.systemd_homebridge.state == 'off')
         }}
      entity_id:
        - binary_sensor.kodi_online
        - binary_sensor.pushbullet_online
        - binary_sensor.email_online
        - binary_sensor.ios_online
        - binary_sensor.telegram_online
        - binary_sensor.router_on
        - binary_sensor.internet_online
        - sensor.ip_externa
        - switch.systemd_appdaemon
        - switch.systemd_homebridge

- platform: dummy
  sensors:
    motioncam_estudio:
      friendly_name: Vídeo-Mov. en Estudio
      device_class: motion
    motioncam_salon:
      friendly_name: Vídeo-Mov. en Salón
      device_class: motion
    pir_estudio_rpi2h:
      friendly_name: Movimiento en Estudio
      device_class: motion
    pir_dormitorio_rpi2mpd:
      friendly_name: Movimiento en Dormitorio
      device_class: motion
    vibration_sensor_rpi2h:
      friendly_name: Vibración en Estudio
      device_class: vibration
#    sound_sensor_rpi2h:
#      friendly_name: Sonido en Estudio
#      device_class: sound

# **Motion detection on MotionEye streams**

# These are created with Motion running on the slave HASS RPI, adding these custom actions on event_start|_end:
# In /etc/motioneye/thread-1.conf:
# on_event_start /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" start %t;
#     curl -X POST -H "x-ha-access: XXX" -H "Content-Type: application/json" -d '{"state": "on", "attributes": {"device_class": "motion", "friendly_name": "Movimiento Cam ESCAM"}}' http://192.168.1.13:8123/api/states/binary_sensor.motioncam_salon
# on_event_end /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" stop %t;
#     curl -X POST -H "x-ha-access: XXX" -H "Content-Type: application/json" -d '{"state": "off", "attributes": {"device_class": "motion", "friendly_name": "Movimiento Cam ESCAM"}}' http://192.168.1.13:8123/api/states/binary_sensor.motioncam_salon
# event_gap 5

# In /etc/motioneye/thread-2.conf:
# on_event_start /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" start %t;
#     curl -X POST -H "x-ha-access: XXX" -H "Content-Type: application/json" -d '{"state": "on", "attributes": {"device_class": "motion", "friendly_name": "Movimiento Cam Estudio"}}' http://192.168.1.13:8123/api/states/binary_sensor.motioncam_estudio
# on_event_end /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" stop %t;
#     curl -X POST -H "x-ha-access: XXX" -H "Content-Type: application/json" -d '{"state": "off", "attributes": {"device_class": "motion", "friendly_name": "Movimiento Cam Estudio"}}' http://192.168.1.13:8123/api/states/binary_sensor.motioncam_estudio
# event_gap 5
