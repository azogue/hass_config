# Startup notifications & new version notify
- alias: Startup Notification
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: switch.turn_on
      entity_id: switch.camara
    - service: switch.turn_on
      entity_id: switch.caldera
    - service: script.turn_on
      entity_id: script.notify_hass_start

- alias: Startup Notification from appdaemon
  trigger:
    - platform: event
      event_type: ha_start
  action:
    - service: switch.turn_on
      entity_id: switch.camara
    - service: switch.turn_on
      entity_id: switch.caldera
    - service: script.turn_on
      entity_id: script.notify_hass_start

- alias: Update notifications
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
#  - service: notify.pushbullet
#    data:
#      title: 'New Home Assistant Release'
#      target: !secret pb_target
#      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."
  - service: notify.ios_iphone
    data:
      title: 'New Home Assistant Release'
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."
      data:
        push:
          badge: 1
          category: "CONFIRM"

# Flush MySQL database if not ok & notify:
- alias: Database flush
  trigger:
    platform: state
    entity_id: binary_sensor.database_ok
    to: 'off'
    for:
      minutes: 2
  action:
    - service: mytelegram_bot.send_message
      data:
        title: '*MySQL flush*'
        target: !secret telegram_bot_chat_id_admin
        message: !secret msg_recorder_flush
        disable_notification: false
        disable_web_page_preview: true
    - delay:
        seconds: 5
    - service: shell_command.cmd_recorder_flush_hosts
